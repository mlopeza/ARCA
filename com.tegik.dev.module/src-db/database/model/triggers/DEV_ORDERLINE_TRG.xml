<?xml version="1.0"?>
  <database name="TRIGGER DEV_ORDERLINE_TRG">
    <trigger name="DEV_ORDERLINE_TRG" table="C_ORDERLINE" fires="before" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[
/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2011 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
v_pricelist VARCHAR(32);
v_isDev VARCHAR(1);
cur_factura RECORD;
v_uom VARCHAR (32);
v_existsfactura NUMBER;
BEGIN
  IF AD_isTriggerEnabled()='N' THEN RETURN;
  END IF;

	

  IF (TG_OP <> 'DELETE') THEN
	SELECT EM_DEV_ISDEV INTO v_isDev FROM C_DOCTYPE WHERE C_DOCTYPE_ID = (SELECT C_DOCTYPETARGET_ID FROM C_ORDER WHERE C_ORDER_ID = :NEW.C_ORDER_ID);
	IF (v_isDev = 'Y') THEN
			
	  SELECT * INTO cur_factura FROM C_INVOICELINE WHERE C_INVOICELINE_ID = :NEW.EM_DEV_IL_ID;
	  SELECT count(*) INTO v_existsfactura FROM C_INVOICELINE WHERE C_INVOICELINE_ID = :NEW.EM_DEV_IL_ID;
	  IF v_existsfactura>0 THEN
	     
		  IF (INSERTING) THEN
			:NEW.M_PRODUCT_ID = cur_factura.M_PRODUCT_ID;
			:NEW.C_TAX_ID = cur_factura.C_TAX_ID;
			:NEW.PRICELIST = cur_factura.PRICELIST;
			:NEW.PRICEACTUAL = cur_factura.PRICEACTUAL;
			:NEW.PRICELIMIT = cur_factura.PRICELIMIT;
			:NEW.QTYORDERED = cur_factura.QTYINVOICED;
			:NEW.C_UOM_ID = cur_factura.C_UOM_ID;
			
		  ELSE 
			IF(:NEW.EM_DEV_PROD_ID <> :OLD.EM_DEV_PROD_ID) THEN
				:NEW.M_PRODUCT_ID = cur_factura.M_PRODUCT_ID;
				:NEW.C_TAX_ID = cur_factura.C_TAX_ID;
				:NEW.PRICELIST = cur_factura.PRICELIST;
				:NEW.PRICEACTUAL = cur_factura.PRICEACTUAL;
				:NEW.PRICELIMIT = cur_factura.PRICELIMIT;
				:NEW.QTYORDERED = cur_factura.QTYINVOICED;
				:NEW.C_UOM_ID = cur_factura.C_UOM_ID;
			END IF;
		  END IF;
		 
		  --NEW.PRICELIST = cur_factura.PRICELIST;
		  --NEW.PRICEACTUAL = cur_factura.PRICEACTUAL;
		  --NEW.PRICELIMIT = cur_factura.PRICELIMIT;
		  --NEW.LINENETAMT = NEW.PRICEACTUAL * NEW.QTYORDERED;
		  :NEW.C_UOM_ID = cur_factura.C_UOM_ID;
		  :NEW.C_TAX_ID = cur_factura.C_TAX_ID;
		  :NEW.PRICELIST = cur_factura.PRICELIST;
		  :NEW.PRICEACTUAL = cur_factura.PRICEACTUAL;
		  :NEW.PRICELIMIT = cur_factura.PRICELIMIT;
		  :NEW.QTYORDERED = cur_factura.QTYINVOICED;
		  :NEW.C_UOM_ID = cur_factura.C_UOM_ID;
	  ELSE
		:NEW.M_PRODUCT_ID = :NEW.EM_Dev_Prod_ID;
		SELECT c_uom_id INTO v_uom FROM m_product WHERE m_product_id=:NEW.m_product_id;
		:NEW.c_uom_id:=v_uom;
		--NEW.C_TAX_ID = cur_factura.C_TAX_ID;
		--NEW.PRICELIST = cur_factura.PRICELIST;
		--NEW.PRICEACTUAL = cur_factura.PRICEACTUAL;
		--NEW.PRICELIMIT = cur_factura.PRICELIMIT;
		--NEW.QTYORDERED = cur_factura.QTYINVOICED;
		--NEW.C_UOM_ID = cur_factura.C_UOM_ID;
		
	  END IF;
	  
	END IF;
  END IF;
  
END DEV_ORDERLINE_TRG
]]></body>
    </trigger>
  </database>
