<?xml version="1.0"?>
  <database name="FUNCTION ALMAC_CREARLINEASDESDEPEDIDO">
    <function name="ALMAC_CREARLINEASDESDEPEDIDO" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
  * The contents of this file are subject to the Compiere Public
  * License 1.1 ("License"); You may not use this file except in
  * compliance with the License. You may obtain a copy of the License in
  * the legal folder of your Openbravo installation.
  * Software distributed under the License is distributed on an
  * "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
  * implied. See the License for the specific language governing rights
  * and limitations under the License.
  * The Original Code is  Compiere  ERP &  Business Solution
  * The Initial Developer of the Original Code is Jorg Janke and ComPiere, Inc.
  * Portions created by Jorg Janke are Copyright (C) 1999-2001 Jorg Janke,
  * parts created by ComPiere are Copyright (C) ComPiere, Inc.;
  * All Rights Reserved.
  * Contributor(s): Openbravo SLU
  * Contributions are Copyright (C) 2001-2008 Openbravo, S.L.U.
  *
  * Specifically, this derivative work is based upon the following Compiere
  * file and version.
  *************************************************************************
  * $Id: C_Invoice_CreateReceipt.sql,v 1.2 2002/05/22 02:48:28 jjanke Exp $
  ***
  * Title: Create Receipt (Shipment) From Invoice
  * Description:
  ************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
  v_M_InOut_ID VARCHAR(32);
  ----
  v_pickexecute_id VARCHAR2(32);
  v_atribute RECORD;
  v_inoutline_id VARCHAR2(32);
  v_pedido VARCHAR2(32):=NULL;
  v_cotizacion VARCHAR2(32);
  v_pedidocotizacion VARCHAR2(32);
  v_numline NUMBER;
  ----
  v_inout VARCHAR(200);
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      IF(Cur_Parameter.ParameterName='pickexecute_pedidos') THEN
        v_pedido:=Cur_Parameter.P_String;
      END IF;
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_M_InOut_ID=v_Record_ID;
    END LOOP; -- Get Parameter
    -- Read Information from Record
   /****/
	SELECT em_almac_ventas_pick_id INTO v_pedido FROM M_InOut where M_Inout_ID = v_M_InOut_ID;
	IF v_pedido IS NOT NULL 
		THEN v_pedidocotizacion = v_pedido;
	ELSE  
		RAISE_APPLICATION_ERROR(-20000,'@ALMAC_100@');
	END IF;
	v_numline=10;
	----SELECT * FROM m_attributesetinstance WHERE ventas_pickexecute_id = v_pickexecute_id
	FOR v_atribute IN
	(SELECT mats.m_attributesetinstance_id, msd.ad_client_id, msd.ad_org_id, msd.isactive, msd.createdby, msd.updatedby,
	msd.m_product_id, msd.m_locator_id, msd.qtyonhand 
	FROM m_storage_detail msd
	INNER JOIN m_attributesetinstance mats ON mats.m_attributesetinstance_id=msd.m_attributesetinstance_id and ROUND(msd.qtyonhand, 4) > 0.0000
	INNER JOIN ventas_pickexecute pick ON pick.ventas_pickexecute_id=mats.em_ventas_pickexecute_id
		WHERE pick.ventas_pickexecute_id = v_pedidocotizacion)
	LOOP
	v_inoutline_id = GET_UUID();
	INSERT INTO m_inoutline (m_inoutline_id, m_inout_id, ad_client_id, ad_org_id, isactive, createdby, updatedby, m_product_id, m_locator_id, m_attributesetinstance_id, line, c_uom_id,
	movementqty)
	VALUES (v_inoutline_id, v_M_InOut_ID, v_atribute.ad_client_id, v_atribute.ad_org_id, v_atribute.isactive, v_atribute.createdby, v_atribute.updatedby,
	v_atribute.m_product_id, v_atribute.m_locator_id, v_atribute.m_attributesetinstance_id, v_numline, '100', v_atribute.qtyonhand);
	v_numline=v_numline+10;
	END LOOP;
	AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 1, 'Se agregaron correctamente las lineas.');
	RETURN;
	  
     --FINISH_PROCESS
    --<<FINISH_PROCESS>>
    --  Update AD_PInstance
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END ALMAC_CREARLINEASDESDEPEDIDO
]]></body>
    </function>
  </database>
