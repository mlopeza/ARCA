<?xml version="1.0"?>
  <database name="FUNCTION ALMAC_ASIGNA_COSTO">
    <function name="ALMAC_ASIGNA_COSTO" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr VARCHAR2(52000):='';
  v_Message VARCHAR2(52000):='';
  v_Record_ID VARCHAR2(32);
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
  -- Parameter Variable
  cur_contenedor  RECORD;
  v_inoutline VARCHAR(32);--OBTG:VARCHAR2--
  v_costo NUMBER;
  v_user VARCHAR(32);--OBTG:VARCHAR2--
  v_producto VARCHAR(32);--OBTG:VARCHAR2--
  BEGIN

    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
  
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date, 
        i.AD_USER_ID
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_user =  Cur_Parameter. AD_USER_ID;
      IF (Cur_Parameter.parametername LIKE 'producto') THEN
		v_producto := Cur_Parameter.P_String;
      END IF;
      IF (Cur_Parameter.parametername LIKE 'costo') THEN
		v_costo := Cur_Parameter.p_number;
      END IF;
    END LOOP; -- Get Parameter
    --Update Costos
	UPDATE M_INOUTLINE 
	SET em_almac_preciom2 = v_costo, updatedby = v_user, updated = now() where M_PRODUCT_ID = v_producto AND M_INOUT_ID = v_Record_ID;

	--Actualiza ALMAC_DISTRIB en caso de que este ligado
	select m_inoutline_id into v_inoutline from m_inoutline where m_product_id = v_producto AND M_INOUT_ID = v_Record_ID;
	UPDATE almac_distrib SET costo_pieza = v_costo where m_product_id = v_producto AND m_inoutline_id = v_inoutline;
	
    --  Update AD_PInstance
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 1, 'Se cambiaron los precios correctamente.');
  
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END ALMAC_ASIGNA_COSTO
]]></body>
    </function>
  </database>
