<?xml version="1.0"?>
  <database name="FUNCTION VENTAS_SOLASIGNAR">
    <function name="VENTAS_SOLASIGNAR" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  -- Parameter
  TYPE RECORD IS REF CURSOR;
   Cur_Parameter RECORD;
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
    END LOOP; -- Get Parameter
    -- Read Information from Record
    v_ResultStr:='Reading Record';
    
	--UPDATE C_ORDER SET em_ventas_revcotiza = 'Y' WHERE C_ORDER_ID = v_Record_ID;
	--UPDATE C_ORDER SET em_ventas_revisado = 'N' WHERE C_ORDER_ID = v_Record_ID;

	UPDATE C_ORDER SET EM_VENTAS_ALERTSTATUS = 'AM' WHERE C_ORDER_ID = v_Record_ID;
	  
     --FINISH_PROCESS
    --<<FINISH_PROCESS>>
    --  Update AD_PInstance
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 1, 'Se ha enviado el pedido al personal de almacén para que asigne la mercancía');
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END VENTAS_SOLASIGNAR
]]></body>
    </function>
  </database>
