<?xml version="1.0"?>
  <database name="FUNCTION TEGIDL_COPIA_USRROLPERM">
    <function name="TEGIDL_COPIA_USRROLPERM" type="NULL">
      <parameter name="p_oldclient_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_newclient_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_useorg" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_prefijo_usuario" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="regreso" type="VARCHAR" mode="out">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  -- Parameter
  TYPE RECORD IS REF CURSOR;
   Cur_Parameter RECORD;
   Cur_UsrRole RECORD;
  v_newrol_id VARCHAR2(32);
  v_permret VARCHAR2(2000):='';
 
  BEGIN
    --  Update AD_PInstance
   
  BEGIN --BODY
    -- Get Parameters
regreso:='';


--------------------------
--Create Users------------
--------------------------

  FOR Cur_Parameter IN
      (SELECT *
      FROM ad_user
      WHERE isactive='Y' AND ad_client_id=p_oldclient_id
      )
    LOOP
      DBMS_OUTPUT.PUT_LINE('USER TO CREATE: '||Cur_Parameter.name);
	   INSERT INTO ad_user(
            ad_user_id, 
            ad_client_id, 
            ad_org_id, 
            isactive, 
            createdby, 
            updatedby, 
            "name", 
            description, 
            "password", 
            email, 
            processing, 
            emailuser, 
            emailuserpw,  
            title, 
            comments, 
            phone, 
            phone2, 
            fax, 
            lastcontact, 
            lastresult, 
            birthday, 
            firstname, 
            lastname, 
            username, 
            islocked)
    VALUES ( GET_UUID(),--ad_user_id, 
            p_newclient_id,--ad_client_id, 
            '0',--ad_org_id, 
            Cur_Parameter.isactive, 
            '100',--createdby, 
            '100',--updatedby, 
            Cur_Parameter.name, 
            Cur_Parameter.description, 
            Cur_Parameter.password, 
            Cur_Parameter.email, 
            Cur_Parameter. processing, 
            Cur_Parameter.emailuser, 
            Cur_Parameter.emailuserpw,  
            Cur_Parameter.title, 
            Cur_Parameter.comments, 
            Cur_Parameter.phone, 
            Cur_Parameter.phone2, 
            Cur_Parameter.fax, 
            Cur_Parameter.lastcontact, 
            Cur_Parameter.lastresult, 
            Cur_Parameter.birthday, 
            Cur_Parameter.firstname, 
            Cur_Parameter.lastname, 
            p_prefijo_usuario||'_'||Cur_Parameter.username, 
            Cur_Parameter.islocked);

DBMS_OUTPUT.PUT_LINE('USER TO CREATED');
    END LOOP; 

--------------------------
--END Create Users--------
--------------------------
--------------------------
--Create Roles------------
--------------------------

  FOR Cur_Parameter IN
      (SELECT * 
      FROM ad_role
      WHERE isactive='Y' AND is_client_admin='N' 
      AND  TRIM(userlevel) NOT IN ('O')
      AND ad_client_id=p_oldclient_id
      )
  LOOP 
  DBMS_OUTPUT.PUT_LINE('ROLE TO CREATE: '||Cur_Parameter.name);
     v_newrol_id:= GET_UUID();

	   INSERT INTO ad_role(
            ad_role_id, 
            ad_client_id, 
            ad_org_id, 
            isactive,
            createdby,
            "name", 
            updatedby, 
            description, 
            userlevel,
            amtapproval, 
            ismanual,
            clientlist, 
            orglist, 
            processing, 
            is_client_admin)
    VALUES ( v_newrol_id,--ad_role_id, 
            p_newclient_id,--ad_client_id, 
            '0',--ad_org_id, 
            Cur_Parameter.isactive, 
            '100',--createdby,  
             Cur_Parameter.name, 
            '100',--updatedby, 
            Cur_Parameter.description, 
            Cur_Parameter.userlevel, 
            Cur_Parameter.amtapproval, 
            Cur_Parameter.ismanual, 
            p_newclient_id,--clientlist, 
            '0',--orglist, 
            Cur_Parameter.processing, 
            Cur_Parameter.is_client_admin);
            DBMS_OUTPUT.PUT_LINE('ROLE CREATED: '||Cur_Parameter.name);
				--------------------------
				--Create Role Perm--------
				--------------------------
				SELECT idl_copia_permrol(Cur_Parameter.ad_role_id,v_newrol_id,p_useorg) 
				INTO v_permret ;
				IF v_permret !='' THEN
				RAISE v_permret;
				END IF;
				--------------------------
				--END Role Perm-----------
				--------------------------
				--------------------------
				--Asign Users-------------
				--------------------------

				  FOR Cur_UsrRole IN
				      (SELECT ad_user_id
				      FROM ad_user
				      WHERE ad_client_id=p_newclient_id
				      AND ad_user.username IN (SELECT p_prefijo_usuario||'_'||ou.username
								FROM ad_user_roles ur
								INNER JOIN ad_user ou ON ur.ad_user_id=ou.ad_user_id
								WHERE ur.isactive='Y' AND ou.isactive='Y' 
								AND ur.ad_role_id=Cur_Parameter.ad_role_id )
				      )
				    LOOP
				      
					INSERT INTO ad_user_roles(
					    ad_user_roles_id, 
					    ad_user_id, 
					    ad_role_id, 
					    ad_client_id, 
					    ad_org_id, 
					    isactive, 
					    createdby, 
					    updatedby, 
					    is_role_admin)
					VALUES (GET_UUID(),--ad_user_roles_id, 
					    Cur_UsrRole.ad_user_id, 
					    v_newrol_id,--ad_role_id, 
					    p_newclient_id,--ad_client_id, 
					    '0',--ad_org_id, 
					    Cur_Parameter.isactive, 
					    '100',--createdby, 
					    '100',--updatedby,
					     'N'); 
				    END LOOP; 

				--------------------------
				--END Asign Users---------
				--------------------------

   
    END LOOP; 

--------------------------
--END Create Roles--------
--------------------------
     
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= 'Error: ' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
 regreso:=v_ResultStr;
  RETURN;
END TEGIDL_COPIA_USRROLPERM
]]></body>
    </function>
  </database>
